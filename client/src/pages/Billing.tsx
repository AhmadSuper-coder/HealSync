import { useState } from \"react\";\nimport { BillingForm } from \"@/components/BillingForm\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Plus, Eye, Download, CreditCard } from \"lucide-react\";\n\ninterface Bill {\n  id: string;\n  patientName: string;\n  amount: number;\n  date: string;\n  status: \"paid\" | \"pending\" | \"overdue\";\n  paymentMethod?: string;\n}\n\n// todo: remove mock functionality\nconst mockBills: Bill[] = [\n  {\n    id: \"1\",\n    patientName: \"Rajesh Sharma\",\n    amount: 800,\n    date: \"2024-01-15\",\n    status: \"paid\",\n    paymentMethod: \"UPI\",\n  },\n  {\n    id: \"2\",\n    patientName: \"Priya Patel\",\n    amount: 1200,\n    date: \"2024-01-14\",\n    status: \"pending\",\n  },\n  {\n    id: \"3\",\n    patientName: \"Amit Kumar\",\n    amount: 600,\n    date: \"2024-01-10\",\n    status: \"overdue\",\n  },\n];\n\nexport default function Billing() {\n  const [activeTab, setActiveTab] = useState(\"list\");\n\n  const handleViewBill = (bill: Bill) => {\n    console.log('View bill:', bill.id);\n  };\n\n  const handleDownloadInvoice = (bill: Bill) => {\n    console.log('Download invoice:', bill.id);\n  };\n\n  const handleMarkPaid = (bill: Bill) => {\n    console.log('Mark bill as paid:', bill.id);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"paid\":\n        return \"default\";\n      case \"pending\":\n        return \"secondary\";\n      case \"overdue\":\n        return \"destructive\";\n      default:\n        return \"secondary\";\n    }\n  };\n\n  const totalRevenue = mockBills\n    .filter(bill => bill.status === \"paid\")\n    .reduce((sum, bill) => sum + bill.amount, 0);\n\n  const pendingAmount = mockBills\n    .filter(bill => bill.status === \"pending\" || bill.status === \"overdue\")\n    .reduce((sum, bill) => sum + bill.amount, 0);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Billing & Payments</h1>\n          <p className=\"text-muted-foreground\">\n            Manage invoices, track payments, and generate bills.\n          </p>\n        </div>\n        <Button\n          onClick={() => setActiveTab(\"create\")}\n          data-testid=\"button-new-bill\"\n        >\n          <Plus className=\"mr-2 h-4 w-4\" />\n          Generate Bill\n        </Button>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-chart-4\">₹{totalRevenue.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">This month</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Payments</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-chart-5\">₹{pendingAmount.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">Outstanding amount</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Bills</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{mockBills.length}</div>\n            <p className=\"text-xs text-muted-foreground\">This month</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList>\n          <TabsTrigger value=\"list\" data-testid=\"tab-bill-list\">Bills & Invoices</TabsTrigger>\n          <TabsTrigger value=\"create\" data-testid=\"tab-create-bill\">Generate Bill</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"list\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Bills & Invoices</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"rounded-md border\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Patient Name</TableHead>\n                      <TableHead>Amount</TableHead>\n                      <TableHead>Date</TableHead>\n                      <TableHead>Payment Method</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"text-right\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {mockBills.map((bill) => (\n                      <TableRow key={bill.id}>\n                        <TableCell className=\"font-medium\">\n                          {bill.patientName}\n                        </TableCell>\n                        <TableCell>₹{bill.amount}</TableCell>\n                        <TableCell>{bill.date}</TableCell>\n                        <TableCell>{bill.paymentMethod || \"—\"}</TableCell>\n                        <TableCell>\n                          <Badge \n                            variant={getStatusColor(bill.status) as any}\n                            data-testid={`badge-status-${bill.id}`}\n                          >\n                            {bill.status}\n                          </Badge>\n                        </TableCell>\n                        <TableCell className=\"text-right\">\n                          <div className=\"flex justify-end gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleViewBill(bill)}\n                              data-testid={`button-view-${bill.id}`}\n                            >\n                              <Eye className=\"h-4 w-4\" />\n                            </Button>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleDownloadInvoice(bill)}\n                              data-testid={`button-download-${bill.id}`}\n                            >\n                              <Download className=\"h-4 w-4\" />\n                            </Button>\n                            {bill.status !== \"paid\" && (\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleMarkPaid(bill)}\n                                data-testid={`button-mark-paid-${bill.id}`}\n                              >\n                                <CreditCard className=\"h-4 w-4\" />\n                              </Button>\n                            )}\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"create\" className=\"space-y-6\">\n          <BillingForm onSubmit={(data) => {\n            console.log('Bill generated:', data);\n            setActiveTab(\"list\");\n          }} />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n