import { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Upload, File, X, Eye } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface UploadedFile {\n  id: string;\n  name: string;\n  size: number;\n  type: string;\n  uploadDate: string;\n}\n\ninterface FileUploadProps {\n  patientId?: string;\n  onUpload?: (files: File[]) => void;\n}\n\nexport function FileUpload({ patientId, onUpload }: FileUploadProps) {\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([\n    // todo: remove mock functionality\n    {\n      id: \"1\",\n      name: \"blood_test_report.pdf\",\n      size: 1024000,\n      type: \"application/pdf\",\n      uploadDate: \"2024-01-10\",\n    },\n    {\n      id: \"2\",\n      name: \"xray_chest.jpg\",\n      size: 2048000,\n      type: \"image/jpeg\",\n      uploadDate: \"2024-01-08\",\n    },\n  ]);\n  const { toast } = useToast();\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      console.log('Files dropped:', acceptedFiles);\n      onUpload?.(acceptedFiles);\n      \n      // Simulate file upload\n      const newFiles: UploadedFile[] = acceptedFiles.map((file, index) => ({\n        id: `new-${Date.now()}-${index}`,\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        uploadDate: new Date().toISOString().split('T')[0],\n      }));\n      \n      setUploadedFiles(prev => [...prev, ...newFiles]);\n      \n      toast({\n        title: \"Files Uploaded\",\n        description: `${acceptedFiles.length} file(s) uploaded successfully.`,\n      });\n    },\n    [onUpload, toast]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif'],\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n    },\n    maxSize: 10 * 1024 * 1024, // 10MB\n  });\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const handleViewFile = (file: UploadedFile) => {\n    console.log('View file:', file.id);\n    toast({\n      title: \"View File\",\n      description: `Opening ${file.name}...`,\n    });\n  };\n\n  const handleDeleteFile = (fileId: string) => {\n    setUploadedFiles(prev => prev.filter(file => file.id !== fileId));\n    toast({\n      title: \"File Deleted\",\n      description: \"File has been removed successfully.\",\n    });\n  };\n\n  const getFileTypeColor = (type: string) => {\n    if (type.startsWith('image/')) return 'default';\n    if (type === 'application/pdf') return 'destructive';\n    return 'secondary';\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Patient Files & Reports</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Upload Area */}\n        <div\n          {...getRootProps()}\n          className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors ${\n            isDragActive\n              ? 'border-primary bg-primary/5'\n              : 'border-muted-foreground/25 hover:border-primary/50'\n          }`}\n          data-testid=\"dropzone-file-upload\"\n        >\n          <input {...getInputProps()} />\n          <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-4\" />\n          {isDragActive ? (\n            <p className=\"text-primary\">Drop the files here...</p>\n          ) : (\n            <div>\n              <p className=\"text-muted-foreground mb-2\">\n                Drag & drop files here, or click to select files\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Supports: Images, PDF, DOC, DOCX (Max 10MB)\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* File List */}\n        {uploadedFiles.length > 0 && (\n          <div className=\"space-y-3\">\n            <h4 className=\"font-medium text-sm\">Uploaded Files</h4>\n            {uploadedFiles.map((file) => (\n              <div\n                key={file.id}\n                className=\"flex items-center justify-between p-3 border rounded-lg hover-elevate\"\n              >\n                <div className=\"flex items-center gap-3\">\n                  <File className=\"h-4 w-4 text-muted-foreground\" />\n                  <div>\n                    <p className=\"font-medium text-sm\">{file.name}</p>\n                    <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                      <span>{formatFileSize(file.size)}</span>\n                      <span>â€¢</span>\n                      <span>{file.uploadDate}</span>\n                      <Badge \n                        variant={getFileTypeColor(file.type) as any} \n                        className=\"text-xs\"\n                      >\n                        {file.type.split('/')[1]?.toUpperCase() || 'FILE'}\n                      </Badge>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleViewFile(file)}\n                    data-testid={`button-view-file-${file.id}`}\n                  >\n                    <Eye className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleDeleteFile(file.id)}\n                    data-testid={`button-delete-file-${file.id}`}\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n