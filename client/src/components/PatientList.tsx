import { useState } from \"react\";\nimport { Search, Edit, Eye, FileText, Phone } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\ninterface Patient {\n  id: string;\n  name: string;\n  age: number;\n  gender: string;\n  phone: string;\n  lastVisit: string;\n  status: \"active\" | \"inactive\";\n}\n\n// todo: remove mock functionality\nconst mockPatients: Patient[] = [\n  {\n    id: \"1\",\n    name: \"Rajesh Sharma\",\n    age: 45,\n    gender: \"Male\",\n    phone: \"+91 9876543210\",\n    lastVisit: \"2024-01-15\",\n    status: \"active\",\n  },\n  {\n    id: \"2\",\n    name: \"Priya Patel\",\n    age: 32,\n    gender: \"Female\",\n    phone: \"+91 9876543211\",\n    lastVisit: \"2024-01-10\",\n    status: \"active\",\n  },\n  {\n    id: \"3\",\n    name: \"Amit Kumar\",\n    age: 28,\n    gender: \"Male\",\n    phone: \"+91 9876543212\",\n    lastVisit: \"2023-12-20\",\n    status: \"inactive\",\n  },\n];\n\nexport function PatientList() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [patients] = useState<Patient[]>(mockPatients);\n\n  const filteredPatients = patients.filter(\n    (patient) =>\n      patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      patient.phone.includes(searchTerm)\n  );\n\n  const handleViewPatient = (patient: Patient) => {\n    console.log('View patient:', patient.id);\n  };\n\n  const handleEditPatient = (patient: Patient) => {\n    console.log('Edit patient:', patient.id);\n  };\n\n  const handleCallPatient = (patient: Patient) => {\n    console.log('Call patient:', patient.phone);\n  };\n\n  const handleViewHistory = (patient: Patient) => {\n    console.log('View history for patient:', patient.id);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Patient Records</CardTitle>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"relative flex-1\">\n            <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search patients by name or phone...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-8\"\n              data-testid=\"input-search-patients\"\n            />\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"rounded-md border\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Name</TableHead>\n                <TableHead>Age</TableHead>\n                <TableHead>Gender</TableHead>\n                <TableHead>Phone</TableHead>\n                <TableHead>Last Visit</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredPatients.map((patient) => (\n                <TableRow key={patient.id}>\n                  <TableCell className=\"font-medium\">{patient.name}</TableCell>\n                  <TableCell>{patient.age}</TableCell>\n                  <TableCell>{patient.gender}</TableCell>\n                  <TableCell>{patient.phone}</TableCell>\n                  <TableCell>{patient.lastVisit}</TableCell>\n                  <TableCell>\n                    <Badge\n                      variant={patient.status === \"active\" ? \"default\" : \"secondary\"}\n                      data-testid={`badge-status-${patient.id}`}\n                    >\n                      {patient.status}\n                    </Badge>\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\" data-testid={`button-actions-${patient.id}`}>\n                          Actions\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem onClick={() => handleViewPatient(patient)}>\n                          <Eye className=\"mr-2 h-4 w-4\" />\n                          View Details\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleEditPatient(patient)}>\n                          <Edit className=\"mr-2 h-4 w-4\" />\n                          Edit\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleViewHistory(patient)}>\n                          <FileText className=\"mr-2 h-4 w-4\" />\n                          View History\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => handleCallPatient(patient)}>\n                          <Phone className=\"mr-2 h-4 w-4\" />\n                          Call Patient\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n