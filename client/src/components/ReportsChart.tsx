import {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useState } from \"react\";\n\n// todo: remove mock functionality\nconst patientData = [\n  { month: \"Jan\", patients: 240, revenue: 45000 },\n  { month: \"Feb\", patients: 300, revenue: 52000 },\n  { month: \"Mar\", patients: 280, revenue: 48000 },\n  { month: \"Apr\", patients: 320, revenue: 58000 },\n  { month: \"May\", patients: 350, revenue: 62000 },\n  { month: \"Jun\", patients: 380, revenue: 68000 },\n];\n\nconst appointmentStatusData = [\n  { name: \"Completed\", value: 65, color: \"hsl(var(--chart-4))\" },\n  { name: \"Scheduled\", value: 25, color: \"hsl(var(--chart-1))\" },\n  { name: \"Cancelled\", value: 8, color: \"hsl(var(--destructive))\" },\n  { name: \"No Show\", value: 2, color: \"hsl(var(--muted))\" },\n];\n\nconst paymentStatusData = [\n  { month: \"Jan\", paid: 42000, pending: 3000 },\n  { month: \"Feb\", paid: 48000, pending: 4000 },\n  { month: \"Mar\", paid: 44000, pending: 4000 },\n  { month: \"Apr\", paid: 54000, pending: 4000 },\n  { month: \"May\", paid: 58000, pending: 4000 },\n  { month: \"Jun\", paid: 64000, pending: 4000 },\n];\n\nexport function ReportsChart() {\n  const [chartType, setChartType] = useState(\"patients\");\n\n  const renderChart = () => {\n    switch (chartType) {\n      case \"patients\":\n        return (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={patientData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"patients\" fill=\"hsl(var(--chart-1))\" radius={[4, 4, 0, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      case \"revenue\":\n        return (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={patientData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip formatter={(value) => [`₹${value}`, \"Revenue\"]} />\n              <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"hsl(var(--chart-2))\" strokeWidth={3} dot={{ r: 6 }} />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n      case \"appointments\":\n        return (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={appointmentStatusData}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={100}\n                dataKey=\"value\"\n                label={({ name, value }) => `${name}: ${value}%`}\n              >\n                {appointmentStatusData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        );\n      case \"payments\":\n        return (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={paymentStatusData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip formatter={(value) => [`₹${value}`, \"Amount\"]} />\n              <Bar dataKey=\"paid\" fill=\"hsl(var(--chart-4))\" radius={[4, 4, 0, 0]} />\n              <Bar dataKey=\"pending\" fill=\"hsl(var(--chart-5))\" radius={[4, 4, 0, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const getChartTitle = () => {\n    switch (chartType) {\n      case \"patients\":\n        return \"Patient Analytics - Monthly Overview\";\n      case \"revenue\":\n        return \"Revenue Trends - Last 6 Months\";\n      case \"appointments\":\n        return \"Appointment Status Distribution\";\n      case \"payments\":\n        return \"Payment Status - Paid vs Pending\";\n      default:\n        return \"Analytics\";\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-lg font-medium\">{getChartTitle()}</CardTitle>\n        <Select value={chartType} onValueChange={setChartType}>\n          <SelectTrigger className=\"w-40\" data-testid=\"select-chart-type\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"patients\">Patient Count</SelectItem>\n            <SelectItem value=\"revenue\">Revenue</SelectItem>\n            <SelectItem value=\"appointments\">Appointments</SelectItem>\n            <SelectItem value=\"payments\">Payments</SelectItem>\n          </SelectContent>\n        </Select>\n      </CardHeader>\n      <CardContent>{renderChart()}</CardContent>\n    </Card>\n  );\n}\n