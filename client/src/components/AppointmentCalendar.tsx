import { useState } from \"react\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { format } from \"date-fns\";\nimport { Clock, User, Phone } from \"lucide-react\";\n\ninterface Appointment {\n  id: string;\n  patientName: string;\n  time: string;\n  duration: string;\n  type: \"consultation\" | \"follow-up\" | \"emergency\";\n  status: \"scheduled\" | \"completed\" | \"cancelled\";\n  phone?: string;\n}\n\n// todo: remove mock functionality\nconst mockAppointments: Record<string, Appointment[]> = {\n  \"2024-01-15\": [\n    {\n      id: \"1\",\n      patientName: \"Rajesh Sharma\",\n      time: \"10:00\",\n      duration: \"30 min\",\n      type: \"consultation\",\n      status: \"scheduled\",\n      phone: \"+91 9876543210\",\n    },\n    {\n      id: \"2\",\n      patientName: \"Priya Patel\",\n      time: \"11:00\",\n      duration: \"45 min\",\n      type: \"follow-up\",\n      status: \"scheduled\",\n      phone: \"+91 9876543211\",\n    },\n  ],\n  \"2024-01-16\": [\n    {\n      id: \"3\",\n      patientName: \"Amit Kumar\",\n      time: \"15:00\",\n      duration: \"30 min\",\n      type: \"consultation\",\n      status: \"scheduled\",\n      phone: \"+91 9876543212\",\n    },\n  ],\n};\n\nexport function AppointmentCalendar() {\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());\n  const selectedDateStr = selectedDate ? format(selectedDate, \"yyyy-MM-dd\") : \"\";\n  const appointments = selectedDateStr ? mockAppointments[selectedDateStr] || [] : [];\n\n  const handleCallPatient = (appointment: Appointment) => {\n    console.log('Call patient:', appointment.phone);\n  };\n\n  const handleMarkComplete = (appointment: Appointment) => {\n    console.log('Mark appointment complete:', appointment.id);\n  };\n\n  const handleReschedule = (appointment: Appointment) => {\n    console.log('Reschedule appointment:', appointment.id);\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case \"consultation\":\n        return \"default\";\n      case \"follow-up\":\n        return \"secondary\";\n      case \"emergency\":\n        return \"destructive\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"scheduled\":\n        return \"text-chart-1\";\n      case \"completed\":\n        return \"text-chart-4\";\n      case \"cancelled\":\n        return \"text-destructive\";\n      default:\n        return \"text-muted-foreground\";\n    }\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Appointment Calendar</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Calendar\n            mode=\"single\"\n            selected={selectedDate}\n            onSelect={setSelectedDate}\n            disabled={(date) => date < new Date(\"1900-01-01\")}\n            className=\"rounded-md border\"\n          />\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>\n            Appointments for {selectedDate ? format(selectedDate, \"PPP\") : \"Select a date\"}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {appointments.length === 0 ? (\n            <p className=\"text-muted-foreground text-center py-8\">\n              No appointments scheduled for this date.\n            </p>\n          ) : (\n            <div className=\"space-y-4\">\n              {appointments.map((appointment) => (\n                <div\n                  key={appointment.id}\n                  className=\"flex items-center justify-between p-4 border rounded-lg hover-elevate\"\n                >\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <User className=\"h-4 w-4\" />\n                      <span className=\"font-medium\">{appointment.patientName}</span>\n                      <Badge variant={getTypeColor(appointment.type) as any}>\n                        {appointment.type}\n                      </Badge>\n                    </div>\n                    <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                      <div className=\"flex items-center gap-1\">\n                        <Clock className=\"h-3 w-3\" />\n                        {appointment.time} ({appointment.duration})\n                      </div>\n                      <div className={`font-medium ${getStatusColor(appointment.status)}`}>\n                        {appointment.status}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {appointment.phone && (\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handleCallPatient(appointment)}\n                        data-testid={`button-call-${appointment.id}`}\n                      >\n                        <Phone className=\"h-4 w-4\" />\n                      </Button>\n                    )}\n                    {appointment.status === \"scheduled\" && (\n                      <>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleMarkComplete(appointment)}\n                          data-testid={`button-complete-${appointment.id}`}\n                        >\n                          Complete\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleReschedule(appointment)}\n                          data-testid={`button-reschedule-${appointment.id}`}\n                        >\n                          Reschedule\n                        </Button>\n                      </>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n